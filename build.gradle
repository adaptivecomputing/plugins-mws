buildscript {
	repositories {
		maven {
			url "https://oss.sonatype.org/content/groups/public"
		}
	}
	dependencies {
		classpath ('com.adaptc.gradle:moab-sdk:0.6-SNAPSHOT')
	}
	// check for updates every build
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}
}

apply plugin: com.adaptc.gradle.moabsdk.plugins.MoabSdkInitPlugin
apply plugin: com.adaptc.gradle.coberturamaster.CoberturaMasterPlugin
apply plugin: 'idea'
apply plugin:'eclipse'

// TODO Remove with released versions
configurations.all {
	resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
}

subprojects { proj ->
	group = "com.adaptc.mws"

	apply plugin:'signing'
	apply plugin:'eclipse'
	apply plugin:'idea'

	// TODO Remove with released versions
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
	}

	/*
	 * Deployment and JAR files
	 */
	jar.doLast {
		ant.jar(destfile:archivePath, update:true) {
			delegate.manifest {
				attribute(name: "Built-By", value: System.properties['user.name'])
				attribute(name: "Created-By",
						value: System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")")
				attribute(name: "Implementation-Title", value: moabSdk.pluginProject.title)
				attribute(name: "Implementation-Version", value: proj.version)
				attribute(name: "Implementation-Vendor", value: moabSdk.pluginProject.author ?: "-")
				attribute(name: "Implementation-Build", value: System.env["BUILD_NUMBER"] ?: "0")
				attribute(name: "Implementation-Build-Date", value: System.env["BUILD_ID"] ?: new Date())
				attribute(name: "Implementation-Revision", value: System.env["GIT_COMMIT"] ?: "none")
			}
		}
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn:javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	artifacts {
		archives jar
		archives sourcesJar
		archives javadocJar
	}

	def isSnapshot = proj.version.contains("-SNAPSHOT")

	signing {
		if (!isSnapshot)
			sign configurations.archives
	}

	uploadArchives {
		def repo = "oss-" + (isSnapshot ? "snapshots" : "releases")
		def repoUrl = rootProject."${repo}.url"
		def username = rootProject."${repo}.username"
		def password = rootProject."${repo}.password"

		repositories.mavenDeployer {
			if (!isSnapshot) {
				beforeDeployment { deployment -> signing.signPom(deployment) }
			}

			configuration = configurations.deployerJars
			repository(url:repoUrl) {
				authentication(userName:username, password:password)
			}

			pom {
				project {
					name proj.projectName
					description proj.projectDescription
					licenses {
						license {
							name "The Apache Software License, Version 2.0"
							url "http://www.apache.org/licenses/LICENSE-2.0.txt"
							distribution "repo"
						}
					}
					url "http://github.com/adaptivecomputing/plugins-mws"
					scm {
						connection "scm:git:https://github.com/adaptivecomputing/plugins-mws.git"
						developerConnection "scm:git:https://github.com/adaptivecomputing/plugins-mws.git"
						url "http://github.com/adaptivecomputing/plugins-mws"
					}
					developers {
						developer {
							id "ace"
							name "Adaptive Computing"
							email "info@adaptivecomputing.com"
							organization = "Adaptive Computing, Inc."
							organizationUrl "http://adaptivecomputing.com"
							timezone "-7"
						}
					}
				}
			}
		}
	}
}

cobertura {
	master {
		excludedProjects = ['samples']
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.3'
	jarFile = 'wrapper/wrapper.jar'
}