buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://oss.sonatype.org/content/groups/public"
		}
	}
	dependencies {
		classpath ('com.adaptc.gradle:moab-sdk:0.9-SNAPSHOT')
		classpath ('com.adaptc.gradle:nexus-workflow:0.5')
	}
	// check for updates every build
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}
}

apply plugin: com.adaptc.gradle.moabsdk.plugins.MoabSdkInitPlugin
apply plugin: com.adaptc.gradle.coberturamaster.CoberturaMasterPlugin
apply plugin: 'idea'
apply plugin:'eclipse'
apply plugin:com.adaptc.gradle.nexusworkflow.NexusWorkflowPlugin

// TODO Remove with released versions
configurations.all {
	resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
}

subprojects { proj ->
	group = "com.adaptc.mws.plugins"

	apply plugin:'signing'
	apply plugin:'eclipse'
	apply plugin:'idea'

	// TODO Remove with released versions
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
	}

	// Replace version snapshot with order number
	if (proj.version.contains("-SNAPSHOT"))
		proj.version = proj.version.replace("-SNAPSHOT", "-"+("git rev-list HEAD".execute().text.readLines().size()))
	jar.doFirst {
		if (proj.version.contains("-SNAPSHOT")) {
			File projectFile = moabSdk.pluginProject.projectFile
			projectFile.write(projectFile.text.readLines().collect {
				if (it.contains("version") && it.contains("-SNAPSHOT"))
					return it.replace("-SNAPSHOT", "-"+("git rev-list HEAD".execute().text.readLines().size()))
				return it
			}.join("\n"))

			// Do this again just to make sure
			proj.version = proj.version.replace("-SNAPSHOT", "-"+("git rev-list HEAD".execute().text.readLines().size()))
		}
	}

	/*
	 * Deployment and JAR files
	 */
	jar.doLast {
		ant.jar(destfile:archivePath, update:true) {
			delegate.manifest {
				attribute(name: "Built-By", value: System.properties['user.name'])
				attribute(name: "Created-By",
						value: System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")")
				attribute(name: "Implementation-Title", value: moabSdk.pluginProject.title)
				attribute(name: "Implementation-Version", value: proj.version)
				attribute(name: "Implementation-Vendor", value: moabSdk.pluginProject.author ?: "-")
				attribute(name: "Implementation-Build", value: System.env["BUILD_NUMBER"] ?: "0")
				attribute(name: "Implementation-Build-Date", value: System.env["BUILD_ID"] ?: new Date())
				attribute(name: "Implementation-Revision", value: System.env["GIT_COMMIT"] ?: "none")
			}
		}
	}

	artifacts {
		archives jar
		archives sourcesJar
		archives javadocJar
	}

	signing {
		required { !proj.version.endsWith("-SNAPSHOT") }
		sign configurations.archives
	}

	uploadArchives {
		repositories.mavenDeployer {
			beforeDeployment { deployment -> signing.signPom(deployment) }

			configuration = configurations.deployerJars
			repository(url:rootProject."oss-releases.url") {
				authentication(userName:rootProject."oss-releases.username", password:rootProject."oss-releases.password")
			}
			snapshotRepository(url:rootProject."oss-snapshots.url") {
				authentication(userName:rootProject."oss-snapshots.username", password:rootProject."oss-snapshots.password")
			}

			pom {
				project {
					artifactId(proj.'projects.artifactId.prefix' + proj.name)
					name moabSdk.pluginProject.title
					description moabSdk.pluginProject.description
					licenses {
						license {
							name "The Apache Software License, Version 2.0"
							url "http://www.apache.org/licenses/LICENSE-2.0.txt"
							distribution "repo"
						}
					}
					url "http://github.com/adaptivecomputing/plugins-mws"
					scm {
						connection "scm:git:https://github.com/adaptivecomputing/plugins-mws.git"
						developerConnection "scm:git:https://github.com/adaptivecomputing/plugins-mws.git"
						url "http://github.com/adaptivecomputing/plugins-mws"
					}
					developers {
						developer {
							id "ace"
							name "Adaptive Computing"
							email "info@adaptivecomputing.com"
							organization = "Adaptive Computing, Inc."
							organizationUrl "http://adaptivecomputing.com"
							timezone "-7"
						}
					}
				}
			}
		}
	}
}

cobertura {
	master {
		excludedProjects = ['samples']
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.4'
	jarFile = 'wrapper/wrapper.jar'
}
