# Messages
nativePlugin.verify.wiki.empty.message=Cannot verify empty Wiki document, please specify wiki in the ''wiki'' URL \
  parameter or by sending a JSON object in the body of the request with the ''content'' field set to the Wiki.

# Labels
nativePlugin.getJobs.label=Get Jobs URL
nativePlugin.getNodes.label=Get Nodes URL
nativePlugin.getVirtualMachines.label=Get Virtual Machines URL
nativePlugin.getCluster.label=Get Cluster URL
nativePlugin.jobCancel.label=Job Cancel URL
nativePlugin.jobModify.label=Job Modify URL
nativePlugin.jobRequeue.label=Job Requeue URL
nativePlugin.jobResume.label=Job Resume URL
nativePlugin.jobStart.label=Job Start URL
nativePlugin.jobSubmit.label=Job Submit URL
nativePlugin.jobSuspend.label=Job Suspend URL
nativePlugin.nodeModify.label=Node Modify URL
nativePlugin.nodePower.label=Node Power URL
nativePlugin.startUrl.label=Start URL
nativePlugin.stopUrl.label=Stop URL
nativePlugin.environment.label=Environment URL Query String
nativePlugin.reportImages.label=Report Images
nativePlugin.lowerCaseNames.label=Convert Object Names to Lowercase

# Help messages
nativePlugin.environment.help=The environment to be set when running scripts as a URL query string \
  (only if "exec" URLs are used).
nativePlugin.getJobs.help=The URL to call when retrieving job information.
nativePlugin.getNodes.help=The URL to call when retrieving node information.
nativePlugin.getVirtualMachines.help=The URL to call when retrieving virtual machine information.
nativePlugin.getCluster.help=The URL to call when retrieving node and virtual machine information.
nativePlugin.jobCancel.help=The URL to call when canceling a job.
nativePlugin.jobModify.help=The URL to call when modifying a job.
nativePlugin.jobRequeue.help=The URL to call when requeuing a job.
nativePlugin.jobResume.help=The URL to call when resuming a job.
nativePlugin.jobStart.help=The URL to call when starting a job.
nativePlugin.jobSubmit.help=The URL to call when submitting a job.
nativePlugin.jobSuspend.help=The URL to call when suspending a job.
nativePlugin.nodeModify.help=The URL to call when modifying a node.
nativePlugin.nodePower.help=The URL to call when changing the power state of a node.
nativePlugin.startUrl.help=The URL to call when starting the associated Plugin.
nativePlugin.stopUrl.help=The URL to call when stopping the associated Plugin.
nativePlugin.reportImages.help=If enabled, the plugin will report MWS images from the OS, VMOSLIST, and VARATTR=HVTYPE \
  attributes reported on nodes and VMs.
nativePlugin.lowerCaseNames.help=If enabled, the plugin will convert all object names to lowercase before reporting \
  them to MWS.  Be careful in disabling this functionality as it will mean all names are case sensitive.

# Images
imageNativeTranslator.get.vm.images=Failed to get list of VM images: {0}
imageNativeTranslator.get.vm.image=Failed to get VM image ''{0}'': {1}
imageNativeTranslator.post.vm.image=Failed to create VM image ''{0}'': {1}
imageNativeTranslator.put.vm.image=Failed to update VM image ''{0}'': {1}
imageNativeTranslator.delete.vm.image=Failed to delete VM image ''{0}'': {1}
imageNativeTranslator.get.hv.images=Failed to get list of hypervisor images: {0}
imageNativeTranslator.post.hv.image=Failed to create hypervisor image ''{0}'': {1}
imageNativeTranslator.put.hv.image=Failed to update hypervisor image ''{0}'': {1}
imageNativeTranslator.delete.hv.image=Failed to delete hypervisor image ''{0}'': {1}
imageNativeTranslator.mismatched.vm.image.sets=The hypervisor image ''{0}'' has mismatched attached VM images, please \
  make sure all nodes with this image have the same VM images list

# Native translators
nodeNativeTranslator.invalid.attribute=Node ''{0}'' has an unrecognized Wiki attribute ''{1}'' ({2}), please \
  remove or correct
nodeNativeTranslator.hypervisorType.without.image=Node ''{0}'' has a specified hypervisor type ({1}={2}) without \
  an associated image, please specify the ''{3}'' attribute
nodeNativeTranslator.hypervisorType.without.vmImageNames=Node ''{0}'' has a specified hypervisor type ({1}={2}) without \
  an associated VM image list, please specify the ''{3}'' attribute
nodeNativeTranslator.nodeNativeTranslator.vmImageNames.without.image=Node ''{0}'' has a specified VM image list ({1}) \
  without an associated image, please specify the ''{2}'' attribute
virtualMachineNativeTranslator.invalid.attribute=VM ''{0}'' has an unrecognized Wiki attribute ''{1}'' ({2}), please \
  remove or correct
jobNativeTranslator.invalid.attribute=Job ''{0}'' has an unrecognized Wiki attribute ''{1}'' ({2}), please \
  remove or correct

# Web services labels/helps

# Verify Cluster Query
nativePlugin.webServices.verifyClusterQuery.label=Verify Cluster Query Wiki
nativePlugin.webServices.verifyClusterQuery.help=Verifies a theoretical sample of Wiki for errors as if it were a \
  regular cluster query, including checking for unrecognized attributes and improper values.  The input Wiki may be \
  specified by the URL parameter or by including a JSON object as the body of the request with a single field called \
  ''content'' set to input Wiki data. NOTE: This does not actually result in reports being sent to Moab Workload \
  Manager, but should be used as a debug tool to make sure that reporting will work as expected.
# Input parameters
nativePlugin.webServices.verifyClusterQuery.parameter1.key=wiki
nativePlugin.webServices.verifyClusterQuery.parameter1.label=Input Wiki
nativePlugin.webServices.verifyClusterQuery.parameter1.help=The Wiki to verify as a typical cluster query operation
# Return data
nativePlugin.webServices.verifyClusterQuery.return1.key=valid
nativePlugin.webServices.verifyClusterQuery.return1.label=Valid Wiki
nativePlugin.webServices.verifyClusterQuery.return1.type=Boolean
nativePlugin.webServices.verifyClusterQuery.return1.help=If true, the Wiki was determined to be valid, otherwise false \
  if errors were present
nativePlugin.webServices.verifyClusterQuery.return2.key=totalErrors
nativePlugin.webServices.verifyClusterQuery.return2.label=Total Error Count
nativePlugin.webServices.verifyClusterQuery.return2.type=Integer
nativePlugin.webServices.verifyClusterQuery.return2.help=Contains the count of all errors identified during the verification
nativePlugin.webServices.verifyClusterQuery.return3.key=totalLines
nativePlugin.webServices.verifyClusterQuery.return3.label=Total Line Count
nativePlugin.webServices.verifyClusterQuery.return3.type=Integer
nativePlugin.webServices.verifyClusterQuery.return3.help=Contains the count of all Wiki lines checked during verification, \
  this does not include comment lines or status lines as these are ignored in a typical query
nativePlugin.webServices.verifyClusterQuery.return4.key=lines
nativePlugin.webServices.verifyClusterQuery.return4.label=Line Information
nativePlugin.webServices.verifyClusterQuery.return4.type=List<Map>
nativePlugin.webServices.verifyClusterQuery.return4.help=Contains information about each line in the processed Wiki
# Return data lines object
nativePlugin.webServices.verifyClusterQuery.return5.key=lines.content
nativePlugin.webServices.verifyClusterQuery.return5.label=Line Content
nativePlugin.webServices.verifyClusterQuery.return5.type=String
nativePlugin.webServices.verifyClusterQuery.return5.help=The actual content of the Wiki line processed
nativePlugin.webServices.verifyClusterQuery.return6.key=lines.errors
nativePlugin.webServices.verifyClusterQuery.return6.label=Verification Errors
nativePlugin.webServices.verifyClusterQuery.return6.type=List<String>
nativePlugin.webServices.verifyClusterQuery.return6.help=A listing of errors describing why the Wiki line could not be \
  verified successfully
nativePlugin.webServices.verifyClusterQuery.return7.key=lines.report
nativePlugin.webServices.verifyClusterQuery.return7.label=Report Object
nativePlugin.webServices.verifyClusterQuery.return7.type=Map
nativePlugin.webServices.verifyClusterQuery.return7.help=The resulting report object that would be generated by the plugin
nativePlugin.webServices.verifyClusterQuery.return8.key=lines.type
nativePlugin.webServices.verifyClusterQuery.return8.label=Report Type
nativePlugin.webServices.verifyClusterQuery.return8.type=String
nativePlugin.webServices.verifyClusterQuery.return8.help=The type of the report that would be generated by the plugin

# Verify Workload Query
nativePlugin.webServices.verifyWorkloadQuery.label=Verify Workload Query Wiki
nativePlugin.webServices.verifyWorkloadQuery.help=Verifies a theoretical sample of Wiki for errors as if it were a \
  regular workload query, including checking for unrecognized attributes and improper values.  The input Wiki may be \
  specified by the URL parameter or by including a JSON object as the body of the request with a single field called \
  ''content'' set to input Wiki data. NOTE: This does not actually result in reports being sent to Moab Workload \
  Manager, but should be used as a debug tool to make sure that reporting will work as expected.
# Input parameters
nativePlugin.webServices.verifyWorkloadQuery.parameter1.key=wiki
nativePlugin.webServices.verifyWorkloadQuery.parameter1.label=Input Wiki
nativePlugin.webServices.verifyWorkloadQuery.parameter1.help=The Wiki to verify as a typical workload query operation
# Return data
nativePlugin.webServices.verifyWorkloadQuery.return1.key=valid
nativePlugin.webServices.verifyWorkloadQuery.return1.label=Valid Wiki
nativePlugin.webServices.verifyWorkloadQuery.return1.type=Boolean
nativePlugin.webServices.verifyWorkloadQuery.return1.help=If true, the Wiki was determined to be valid, otherwise false \
  if errors were present
nativePlugin.webServices.verifyWorkloadQuery.return2.key=totalErrors
nativePlugin.webServices.verifyWorkloadQuery.return2.label=Total Error Count
nativePlugin.webServices.verifyWorkloadQuery.return2.type=Integer
nativePlugin.webServices.verifyWorkloadQuery.return2.help=Contains the count of all errors identified during the verification
nativePlugin.webServices.verifyWorkloadQuery.return3.key=totalLines
nativePlugin.webServices.verifyWorkloadQuery.return3.label=Total Line Count
nativePlugin.webServices.verifyWorkloadQuery.return3.type=Integer
nativePlugin.webServices.verifyWorkloadQuery.return3.help=Contains the count of all Wiki lines checked during verification, \
  this does not include comment lines or status lines as these are ignored in a typical query
nativePlugin.webServices.verifyWorkloadQuery.return4.key=lines
nativePlugin.webServices.verifyWorkloadQuery.return4.label=Line Information
nativePlugin.webServices.verifyWorkloadQuery.return4.type=List<Map>
nativePlugin.webServices.verifyWorkloadQuery.return4.help=Contains information about each line in the processed Wiki
# Return data lines object
nativePlugin.webServices.verifyWorkloadQuery.return5.key=lines.content
nativePlugin.webServices.verifyWorkloadQuery.return5.label=Line Content
nativePlugin.webServices.verifyWorkloadQuery.return5.type=String
nativePlugin.webServices.verifyWorkloadQuery.return5.help=The actual content of the Wiki line processed
nativePlugin.webServices.verifyWorkloadQuery.return6.key=lines.errors
nativePlugin.webServices.verifyWorkloadQuery.return6.label=Verification Errors
nativePlugin.webServices.verifyWorkloadQuery.return6.type=List<String>
nativePlugin.webServices.verifyWorkloadQuery.return6.help=A listing of errors describing why the Wiki line could not be \
  verified successfully
nativePlugin.webServices.verifyWorkloadQuery.return7.key=lines.report
nativePlugin.webServices.verifyWorkloadQuery.return7.label=Report Object
nativePlugin.webServices.verifyWorkloadQuery.return7.type=Map
nativePlugin.webServices.verifyWorkloadQuery.return7.help=The resulting report object that would be generated by the plugin
nativePlugin.webServices.verifyWorkloadQuery.return8.key=lines.type
nativePlugin.webServices.verifyWorkloadQuery.return8.label=Report Type
nativePlugin.webServices.verifyWorkloadQuery.return8.type=String
nativePlugin.webServices.verifyWorkloadQuery.return8.help=The type of the report that would be generated by the plugin